{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","user","className","href","TodoInfo","todo","classNames","completed","title","TodoList","todos","map","preparedTodos","userId","usersFromServer","find","App","useState","setTodos","setTitle","userName","setUserName","isTitleInvalid","setIsTitleInvalid","isUserNameInvalid","setIsUserNameInvalid","onSubmit","event","preventDefault","newUser","newTodo","Math","max","currentTodos","type","placeholder","value","onChange","target","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.90603282.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import { User } from '../../types/User';\n\ntype Props = {\n  user: User | null | undefined,\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  return (\n    <a className=\"UserInfo\" href={`mailto:${user?.email}`}>\n      {user?.name}\n    </a>\n  );\n};\n","import classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo/UserInfo';\n\ntype Props = {\n  todo: Todo,\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  return (\n    <article\n      data-id={todo.id}\n      className={classNames(\n        'TodoInfo',\n        {\n          'TodoInfo--completed': todo.completed,\n        },\n      )}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {todo.title}\n      </h2>\n\n      <UserInfo user={todo.user} />\n    </article>\n\n  );\n};\n","import { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo/TodoInfo';\n\ntype Props = {\n  todos: Todo[],\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => (\n        <TodoInfo todo={todo} key={todo.id} />\n      ))}\n    </section>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.scss';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { TodoList } from './components/TodoList/TodoList';\nimport { Todo } from './types/Todo';\n\nconst preparedTodos: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: usersFromServer.find(user => (\n    user.id === todo.userId) || null),\n}));\n\nexport const App = () => {\n  const [todos, setTodos] = useState<Todo[]>(preparedTodos);\n  const [title, setTitle] = useState('');\n  const [userName, setUserName] = useState('');\n  const [isTitleInvalid, setIsTitleInvalid] = useState(false);\n  const [isUserNameInvalid, setIsUserNameInvalid] = useState(false);\n\n  const setEnteredTitle = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value);\n    setIsTitleInvalid(false);\n  };\n\n  const setEnteredUserName = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setUserName(event.target.value);\n    setIsUserNameInvalid(false);\n  };\n\n  const onSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    const newUser = usersFromServer.find(\n      user => user.name === userName,\n    ) || null;\n\n    let userId = 0;\n\n    if (newUser) {\n      userId = newUser.id;\n    }\n\n    if (!userName || !title) {\n      setIsUserNameInvalid(!userName);\n      setIsTitleInvalid(!title);\n\n      return;\n    }\n\n    const maxId = Math.max(...todos.map(todo => todo.id));\n\n    const newTodo: Todo = {\n      id: maxId + 1,\n      title,\n      userId,\n      completed: false,\n      user: newUser,\n    };\n\n    setTodos(currentTodos => [...currentTodos, newTodo]);\n    setTitle('');\n    setUserName('');\n  };\n\n  return (\n    <div className=\"App\">\n      <form onSubmit={onSubmit}>\n        <div className=\"field\">\n          <input\n            type=\"text\"\n            data-cy=\"titleInput\"\n            className=\"input\"\n            placeholder=\"Enter a title\"\n            value={title}\n            onChange={setEnteredTitle}\n          />\n\n          {isTitleInvalid && (\n            <span className=\"error\">\n              Please enter a title\n            </span>\n          )}\n        </div>\n\n        <div className=\"field\">\n          <select\n            data-cy=\"userSelect\"\n            className=\"select\"\n            value={userName}\n            onChange={setEnteredUserName}\n          >\n            <option value=\"\" disabled>\n              Choose a user\n            </option>\n\n            {usersFromServer.map(user => (\n              <option value={user.name} key={user.id}>\n                {user.name}\n              </option>\n            ))}\n          </select>\n\n          {isUserNameInvalid && (\n            <span className=\"error\">\n              Please choose a user\n            </span>\n          )}\n        </div>\n\n        <button\n          type=\"submit\"\n          data-cy=\"submitButton\"\n          className=\"button is-dark\"\n        >\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}